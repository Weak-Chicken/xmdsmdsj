{"version":3,"sources":["webpack:///./src/views/PageArticle.vue?bae7","webpack:///src/views/PageArticle.vue","webpack:///./src/views/PageArticle.vue?8305","webpack:///./src/views/PageArticle.vue","webpack:///./src/temp/data/topics/00002.html","webpack:///./src/temp/data/topics/00001.html","webpack:///./src/temp/VirtualDataServer.vue?7eb3","webpack:///./src/temp/data/topics/TopicIndex.vue?04d7","webpack:///src/temp/data/topics/TopicIndex.vue","webpack:///./src/temp/data/topics/TopicIndex.vue?de23","webpack:///./src/temp/data/topics/TopicIndex.vue","webpack:///src/temp/VirtualDataServer.vue","webpack:///./src/temp/VirtualDataServer.vue?ad98","webpack:///./src/temp/VirtualDataServer.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","on","get-all-posts","getPosts","domProps","innerHTML","_s","topicPlaceHolder","staticRenderFns","PageArticlevue_type_script_lang_js_","name","data","components","VirtualDataServer","methods","allPosts","_this","filter","post","id","$route","params","articleId","html","views_PageArticlevue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__","module","exports","get-all-topics","getAllTopics","TopicIndexvue_type_template_id_080e9c01_scoped_true_render","TopicIndexvue_type_template_id_080e9c01_scoped_true_staticRenderFns","TopicIndexvue_type_script_lang_js_","topicArray","_00001_default","a","title","_00002_default","mounted","$emit","topics_TopicIndexvue_type_script_lang_js_","TopicIndex","VirtualDataServervue_type_script_lang_js_","allTopics","temp_VirtualDataServervue_type_script_lang_js_","VirtualDataServer_component"],"mappings":"yHAAA,IAAAA,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,eAA0B,CAAAF,EAAA,qBAA0BG,GAAA,CAAIC,gBAAAR,EAAAS,YAA8BL,EAAA,OAAYM,SAAA,CAAUC,UAAAX,EAAAY,GAAAZ,EAAAa,sBAA0C,IAChQC,EAAA,gBCSAC,EAAA,CACAC,KAAA,cAEAC,KAHA,WAIA,OACAJ,iBAAA,KAIAK,WAAA,CACAC,oBAAA,MAGAC,QAAA,CACAX,SADA,SACAY,GAAA,IAAAC,EAAArB,KACAA,KAAAY,iBAAAQ,EAAAE,OAAA,SAAAC,GAAA,OAAAA,EAAAC,IAAAH,EAAAI,OAAAC,OAAAC,YAAA,GAAAC,QCzBqVC,EAAA,cCOrVC,EAAgBC,OAAAC,EAAA,KAAAD,CACdF,EACA/B,EACAe,GACF,EACA,KACA,WACA,MAIeoB,EAAA,WAAAH,8BClBfI,EAAAC,QAAA,svECAAD,EAAAC,QAAA,izICAA,IAAArC,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,qBAAgC,CAAAF,EAAA,cAAmBG,GAAA,CAAI8B,iBAAArC,EAAAsC,iBAAmC,IACpMxB,EAAA,GCDIyB,EAAM,WAAgB,IAAAvC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,gBACtGkC,EAAe,6CCSnBC,EAAA,CACAzB,KAAA,aAEAC,KAHA,WAIA,OACAyB,WAAA,CACA,CACAjB,GAAA,QACAI,KAAAc,EAAAC,EACAC,MAAA,8CAGA,CACApB,GAAA,QACAI,KAAAiB,EAAAF,EACAC,MAAA,2CAMAE,QArBA,WAsBA9C,KAAA+C,MAAA,iBAAA/C,KAAAyC,cChCkXO,EAAA,cCOlXlB,EAAgBC,OAAAC,EAAA,KAAAD,CACdiB,EACAV,EACAC,GACF,EACA,KACA,WACA,MAIeU,EAAAnB,UCTfoB,EAAA,CACAnC,KAAA,oBAEAC,KAHA,WAIA,OACAI,SAAA,KASAH,WAAA,CACAgC,cAGA9B,QAAA,CACAkB,aADA,SACAc,GACAnD,KAAAoB,SAAA+B,EACAnD,KAAA+C,MAAA,gBAAA/C,KAAAoB,aC9B2VgC,EAAA,ECOvVC,EAAYtB,OAAAC,EAAA,KAAAD,CACdqB,EACAtD,EACAe,GACF,EACA,KACA,WACA,MAIeoB,EAAA,KAAAoB","file":"js/chunk-5718f0bc.a1e33220.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"pageArticle\"},[_c('VirtualDataServer',{on:{\"get-all-posts\":_vm.getPosts}}),_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.topicPlaceHolder)}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"pageArticle\">\r\n    <VirtualDataServer @get-all-posts=\"getPosts\"></VirtualDataServer>\r\n    <div v-html=\"topicPlaceHolder\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VirtualDataServer from '@/temp/VirtualDataServer.vue';\r\n\r\nexport default {\r\n  name: 'pagearticle',\r\n\r\n  data() {\r\n    return {\r\n      topicPlaceHolder: '',\r\n    }\r\n  },\r\n\r\n  components: {\r\n    VirtualDataServer,\r\n  },\r\n\r\n  methods: {\r\n    getPosts(allPosts) {\r\n      this.topicPlaceHolder = allPosts.filter(post => post.id == this.$route.params.articleId)[0].html;  \r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PageArticle.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PageArticle.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PageArticle.vue?vue&type=template&id=4287e2fa&scoped=true&\"\nimport script from \"./PageArticle.vue?vue&type=script&lang=js&\"\nexport * from \"./PageArticle.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4287e2fa\",\n  null\n  \n)\n\nexport default component.exports","module.exports = \"<h3>Goal:</h3>\\r\\n\\r\\n<h4>Improve the import html file process</h4>\\r\\n\\r\\n<p>\\r\\n  So far, in the virtual data server, it is painful to create each single html file and set a reference to them manually one by one.\\r\\n  Therefore, I'm going to introduce a smarter way to import html files.\\r\\n</p>\\r\\n\\r\\n<br>\\r\\n\\r\\n<p>\\r\\n  I thus require that the import way shall be auto identify the number of html files and set the id of articles based on their file names.\\r\\n</p>\\r\\n\\r\\n<hr>\\r\\n\\r\\n<h3>Steps:</h3>\\r\\n\\r\\n<ol>\\r\\n  <h4><li>Try to use nodejs fs module to read files in a folder</li></h4>\\r\\n\\r\\n  <p>\\r\\n    However, it seems that this is not working. \\\"fs\\\" module will throw an error out in Vue. Maybe I can try that later. But since reading\\r\\n    files directly from the server rather than database is not a good idea, I think trying to do this is meaningless.\\r\\n  </p>\\r\\n\\r\\n  <h4><li>At least, try to import html files dynamically.</li></h4>\\r\\n\\r\\n  <p>So I fisrt built a list for setting ids and titles of a html file. Then, try to import the html file based on its id. The code is </p>\\r\\n\\r\\n  <code>\\r\\n      function getAllPosts() {\\r\\n        let allPosts = [\\r\\n          {\\r\\n            id: '01',\\r\\n            html: '',\\r\\n            title: 'test'\\r\\n          },\\r\\n      \\r\\n          {\\r\\n            id: '02',\\r\\n            html: '',\\r\\n            title: 'test'\\r\\n          },\\r\\n        ]\\r\\n      \\r\\n        allPosts.forEach((item, index, arr) => {\\r\\n          import('@/temp/data/topics/' + item.id + '.html').then( module => item.html = module.default);\\r\\n        });\\r\\n      \\r\\n        return allPosts;\\r\\n      }\\r\\n      \\r\\n      export { getAllPosts };\\r\\n  </code>\\r\\n\\r\\n  <p>Now its importing dynamically.</p>\\r\\n\\r\\n  <h4><li>Then, I noticed that the original page cannot be shown here.</li></h4>\\r\\n\\r\\n  <p>So, now I decide to use a .Vue file to be the index</p>\\r\\n\\r\\n  <h4><li>Still, index.vue has problem</li></h4>\\r\\n\\r\\n  <p>\\r\\n    It always causes <strong>'import' and 'export' may only appear at the top level</strong>.\\r\\n  </p>\\r\\n\\r\\n  <p>\\r\\n    Since I have put so much time on this and this is not that important, I decide to import my files manually through the topicIndex.vue file\\r\\n  </p>\\r\\n</ol>\";","module.exports = \"<h3>Goal:</h3>\\r\\n\\r\\n<h4>Build a post page, set the router properly</h4>\\r\\n\\r\\n<p>In this part, I'll try to build a post page on the front page and set router accordingly.</p>\\r\\n\\r\\n<br>\\r\\n\\r\\n<p>So far, no backend is involved.</p>\\r\\n\\r\\n<br>\\r\\n\\r\\n<p>Meadwhile, I'll try to combine the post page with article page to one url. i.e. article/ for posts while article/:articleId for articles</p>\\r\\n\\r\\n<hr>\\r\\n\\r\\n<h3>Steps:</h3>\\r\\n\\r\\n<ol>\\r\\n  <h4><li>Create a virtual data server</li></h4>\\r\\n  <p>\\r\\n    Due to our backend server is not ready, we need something to simulate a backend server to provide data to us through an API. Here I chose \\r\\n    to build a Vue file in temp folder to read and serve html data.\\r\\n  </p>\\r\\n  <code>\\r\\n      <template>\\r\\n          <div class=\\\"virtualDataServer\\\">\\r\\n        \\r\\n          </div>\\r\\n        </template>\\r\\n        \\r\\n        <script>\\r\\n        import HtmlMD from '@/temp/data/topics/01.html';\\r\\n        \\r\\n        export default {\\r\\n          name: 'virtualdataserver',\\r\\n        \\r\\n          data() {\\r\\n            return {\\r\\n              allPosts: [\\r\\n                {\\r\\n                  id: '01',\\r\\n                  html: HtmlMD,\\r\\n                  title: '',\\r\\n                },\\r\\n              ]\\r\\n            }\\r\\n          },\\r\\n        \\r\\n          mounted() {\\r\\n              this.$emit('get-all-posts', this.allPosts);\\r\\n          },\\r\\n        }\\r\\n        </script>\\r\\n  </code>\\r\\n  <h4><li>Create PostPage view</li></h4>\\r\\n  <p>\\r\\n    Since we're going to show a list of posts, so now we will need a post page here.\\r\\n  </p>\\r\\n  <p>\\r\\n    This post page should be able to read data from the virtual data server we have just built and show these pages as a list with\\r\\n    links.\\r\\n  </p>\\r\\n  <code>\\r\\n      <template>\\r\\n          <div class=\\\"postPage\\\">\\r\\n            <VirtualDataServer @get-all-posts=\\\"getPosts\\\"></VirtualDataServer>\\r\\n            <div class=\\\"onePagePosts\\\" v-for=\\\"post in posts\\\" v-bind:key=\\\"post.id\\\">\\r\\n              <router-link :to=\\\"{name: 'articlepage', params:{articleId: post.id, articleHtml: post.html}}\\\">\\r\\n                {{post.title}}\\r\\n              </router-link>\\r\\n            </div>\\r\\n          </div>\\r\\n        </template>\\r\\n        \\r\\n        <script>\\r\\n        import VirtualDataServer from '@/temp/VirtualDataServer.vue';\\r\\n        \\r\\n        export default {\\r\\n          name: 'postpage',\\r\\n        \\r\\n          data() {\\r\\n            return {\\r\\n              posts:[]\\r\\n            }\\r\\n          },\\r\\n        \\r\\n          components: {\\r\\n            VirtualDataServer,\\r\\n          },\\r\\n        \\r\\n          methods: {\\r\\n            getPosts(allPosts) {\\r\\n              this.posts = allPosts;\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n        </script>    \\r\\n  </code>\\r\\n  <p>\\r\\n    Notice that here I give the html content through router params.\\r\\n  </p>\\r\\n  <h4><li>Fix bugs</li></h4>\\r\\n  <p>\\r\\n    After using the upper method, I realized that passing parameters through router is a bad idea. If you run this code you'll notice that\\r\\n    once the page is refreshed, the data in router will be lost. Which will cause the page change to blank.\\r\\n  </p>\\r\\n  <p>\\r\\n    Therefore, I decide to let article page to re-obtain the data according to article id.\\r\\n  </p>\\r\\n  <p>\\r\\n    The changed code are given below:\\r\\n  </p>\\r\\n  <code>\\r\\n      <template>\\r\\n          <div class=\\\"articlePage\\\">\\r\\n            <VirtualDataServer @get-all-posts=\\\"getPosts\\\"></VirtualDataServer>\\r\\n            <div v-html=\\\"topicPlaceHolder\\\"></div>\\r\\n          </div>\\r\\n        </template>\\r\\n        \\r\\n        <script>\\r\\n        import VirtualDataServer from '@/temp/VirtualDataServer.vue';\\r\\n        \\r\\n        export default {\\r\\n          name: 'articlepage',\\r\\n        \\r\\n          data() {\\r\\n            return {\\r\\n              topicPlaceHolder: '',\\r\\n            }\\r\\n          },\\r\\n        \\r\\n          components: {\\r\\n            VirtualDataServer,\\r\\n          },\\r\\n        \\r\\n          methods: {\\r\\n            getPosts(allPosts) {\\r\\n              this.topicPlaceHolder = allPosts.filter(post => post.id == this.$route.params.articleId)[0].html; \\r\\n            }\\r\\n          }\\r\\n        }\\r\\n        </script>\\r\\n  </code>\\r\\n</ol>\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"virtualDataServer\"},[_c('TopicIndex',{on:{\"get-all-topics\":_vm.getAllTopics}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"topicIndex\"})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"topicIndex\">\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport h00001 from '@/temp/data/topics/00001.html';\r\nimport h00002 from '@/temp/data/topics/00002.html';\r\n\r\nexport default {\r\n  name: 'topicindex',\r\n\r\n  data() {\r\n    return {\r\n      topicArray: [\r\n        {\r\n          id: '00001',\r\n          html: h00001,\r\n          title: 'Build a post page, set the router properly'\r\n        },\r\n\r\n        {\r\n          id: '00002',\r\n          html: h00002,\r\n          title: 'Improve the import html file process'\r\n        },\r\n      ]\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.$emit('get-all-topics', this.topicArray);\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopicIndex.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopicIndex.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TopicIndex.vue?vue&type=template&id=080e9c01&scoped=true&\"\nimport script from \"./TopicIndex.vue?vue&type=script&lang=js&\"\nexport * from \"./TopicIndex.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"080e9c01\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div class=\"virtualDataServer\">\r\n    <TopicIndex @get-all-topics=\"getAllTopics\"></TopicIndex>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TopicIndex from '@/temp/data/topics/TopicIndex.vue';\r\n\r\nexport default {\r\n  name: 'virtualdataserver',\r\n\r\n  data() {\r\n    return {\r\n      allPosts: []\r\n    }\r\n  },\r\n\r\n  // mounted() {\r\n  //   this.allPosts = getAllPosts();\r\n  //   this.$emit('get-all-posts', this.allPosts);\r\n  // },\r\n\r\n  components: {\r\n    TopicIndex,\r\n  },\r\n\r\n  methods: {\r\n    getAllTopics(allTopics) {\r\n      this.allPosts = allTopics;\r\n      this.$emit('get-all-posts', this.allPosts);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./VirtualDataServer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./VirtualDataServer.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./VirtualDataServer.vue?vue&type=template&id=6d108686&scoped=true&\"\nimport script from \"./VirtualDataServer.vue?vue&type=script&lang=js&\"\nexport * from \"./VirtualDataServer.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6d108686\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}